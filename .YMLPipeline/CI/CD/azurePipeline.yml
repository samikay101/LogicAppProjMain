trigger:
  branches:
    include:
      - main
      - develop

pool:
  vmImage: 'windows-latest'

steps:
# Log environment variables at the very start.
- script: |
    echo "===== Environment Variables ====="
    set
  displayName: 'Log Environment Variables'

# Install .NET SDK
- task: UseDotNet@2
  displayName: 'Install .NET SDK'
  inputs:
    packageType: 'sdk'
    version: '6.x'
- script: echo "Installed .NET SDK version 6.x" 
  displayName: 'Log .NET SDK Installation'

# Build Test Solution and log build output directory
- script: |
    echo "===== Building Test Solution ====="
    dotnet build --configuration Release
  displayName: 'Build Test Solution'
  workingDirectory: ./Tests
- script: |
    echo "===== Listing Build Output Directory ====="
    dir "$(Build.SourcesDirectory)/Tests/samiApp1/bin/Release"
  displayName: 'Log Build Output Directory'

# Debug: Print Directory Structure for key paths.
- script: |
    echo "===== Directory Structure from Build.SourcesDirectory ====="
    echo "Build.SourcesDirectory: $(Build.SourcesDirectory)"
    echo "----- Root Directory -----"
    dir "$(Build.SourcesDirectory)"
    echo "----- Tests Directory -----"
    dir "$(Build.SourcesDirectory)/Tests"
    echo "----- samiApp1 Directory -----"
    dir "$(Build.SourcesDirectory)/Tests/samiApp1"
    echo "----- samiWorkflow1 Directory -----"
    dir "$(Build.SourcesDirectory)/Tests/samiApp1/samiWorkflow1"
  displayName: 'Debug: Print Directory Structure'

# Check for testSettings.config file and log its existence.
- script: |
    echo "===== Checking for testSettings.config ====="
    if exist "$(Build.SourcesDirectory)/Tests/samiApp1/samiWorkflow1/testSettings.config" (
      echo "testSettings.config FOUND at: $(Build.SourcesDirectory)/Tests/samiApp1/samiWorkflow1/testSettings.config"
    ) else (
      echo "ERROR: testSettings.config NOT FOUND!"
      exit 1
    )
  displayName: 'Debug: Verify testSettings.config Path'

# Run Unit Tests with VSTest (using default settings)
- task: VSTest@3
  displayName: 'Run Unit Tests'
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: '**/bin/Release/net*/samiApp1.dll'
    searchFolder: '$(Build.SourcesDirectory)/Tests'
    testFiltercriteria: 'TestCategory!=Integration'
    codeCoverageEnabled: true
    diagnosticsEnabled: true
    platform: '$(BuildPlatform)'
    configuration: 'Release'
- script: |
    echo "===== Unit Tests Execution Completed ====="
    echo "Listing contents of the TestResults directory:"
    dir "$(Agent.TempDirectory)\TestResults"
  displayName: 'Log Test Results Directory'

# Publish Test Results and log publishing action.
- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '**/TestResults/*.trx'
    mergeTestResults: true
- script: |
    echo "===== Test Results Published ====="
  displayName: 'Log Test Results Publishing'

# Publish Code Coverage Report and log its location.
- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage Report'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '**/coverage.cobertura.xml'
- script: |
    echo "===== Code Coverage Report Published ====="
    echo "Listing directory to verify coverage file location:"
    dir "$(Build.SourcesDirectory)"
  displayName: 'Log Code Coverage Report'

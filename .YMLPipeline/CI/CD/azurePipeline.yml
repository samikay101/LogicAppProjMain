trigger:
  branches:
    include:
      - main
      - develop

pool:
  vmImage: 'windows-latest'

steps:
# Log environment variables and current directory.
- script: |
    echo "===== Environment Variables ====="
    set
  displayName: 'Log Environment Variables'

- script: |
    echo "===== Current Directory ====="
    cd
  displayName: 'Log Current Directory'

# Install .NET SDK
- task: UseDotNet@2
  displayName: 'Install .NET SDK'
  inputs:
    packageType: 'sdk'
    version: '6.x'
- script: echo "Installed .NET SDK version 6.x" 
  displayName: 'Log .NET SDK Installation'

# Restore NuGet packages using the local nuget.config in the Tests directory
- script: |
    echo "===== Restoring NuGet Packages using local source ====="
    dotnet nuget locals all --clear
    dotnet restore 
  workingDirectory: ./Tests
  displayName: 'Restore NuGet Packages'

# Debug: List installed packages after restore
- script: |
    echo "===== Installed Packages ====="
    dotnet list Tests.sln package
  workingDirectory: ./Tests
  displayName: 'Log Installed Packages'

# Build the Test Solution (located in the Tests folder)
- script: |
    echo "===== Building Test Solution ====="
    dotnet build --configuration Release
  displayName: 'Build Test Solution'
  workingDirectory: ./Tests

# (Other debug and file-check steps remain unchanged...)

# Run Unit Tests using VSTest.
- task: VSTest@3
  displayName: 'Run Unit Tests'
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: '**/bin/Release/net*/samiApp1.dll'
    searchFolder: '$(Build.SourcesDirectory)/Tests'
    testFiltercriteria: 'TestCategory!=Integration'
    codeCoverageEnabled: true
    diagnosticsEnabled: true
    platform: '$(BuildPlatform)'
    configuration: 'Release'

# Log Test Results and Publish them...
- script: |
    echo "===== Unit Tests Execution Completed ====="
    echo "Listing contents of the TestResults directory:"
    dir "$(Agent.TempDirectory)\TestResults"
  displayName: 'Log Test Results Directory'

- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '**/TestResults/*.trx'
    mergeTestResults: true

- script: |
    echo "===== Test Results Published ====="
  displayName: 'Log Test Results Publishing'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage Report'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '**/coverage.cobertura.xml'

- script: |
    echo "===== Code Coverage Report Published ====="
    echo "Listing directory to verify coverage file location:"
    dir "$(Build.SourcesDirectory)"
  displayName: 'Log Code Coverage Report'
